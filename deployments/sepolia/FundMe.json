{
  "address": "0x82eA6f1B19545ba8B00156A04d8499855463A6b4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "notOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x29f99cbf24d33203638fa89ab90c25f27e989ec52a6c299df96b377e47282a3b",
  "receipt": {
    "to": null,
    "from": "0x9c219c68B32f45027eBA048C26A21742d970c626",
    "contractAddress": "0x82eA6f1B19545ba8B00156A04d8499855463A6b4",
    "transactionIndex": 32,
    "gasUsed": "855601",
    "logsBloom": "0x
    "blockHash": "0xe55d228aa002ab888ad2a60e24d7e57477b60a984c3b6b751b203ecde35247aa",
    "transactionHash": "0x29f99cbf24d33203638fa89ab90c25f27e989ec52a6c299df96b377e47282a3b",
    "logs": [],
    "blockNumber": 6339279,
    "cumulativeGasUsed": "5813738",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "e269ff346400661be6d9a4367dcb51e3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"notOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\n//get funds fron users\\n//withdraw funds\\n//set minimum funding value in usd\\n\\nimport \\\"contracts/PriceConverter.sol\\\";\\n\\nerror notOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    uint256 public constant minimumUsd = 50 * 1e18;\\n    address[] public funders;\\n\\n    address public immutable owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    function fund() public payable {\\n        //set minimum find amount\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= minimumUsd,\\n            \\\"didnt send enough\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address funder = funders[i];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        //reset the array\\n        funders = new address[](0);\\n\\n        // actually withdrawing the funds\\n\\n        // transfer\\n\\n        // msg.sender = address\\n        // payable(msg.sender) = payable address\\n        // payable (msg.sender).transfer(address(this).balance);\\n\\n        // // send\\n        // bool sendSuccess =  payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"send failed\\\");\\n\\n        //call\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != owner) {\\n            revert notOwner();\\n        }\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xb2f6573db7fe97fc9b09a3d796eb0f7c8ca306e19a3707f861fa29536b176666\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        // ABI\\r\\n        // Adrress 0x694AA1769357215DE4FAC081bf1f309aDC325306\\r\\n\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n\\r\\n        return uint256(answer * 1e10);\\r\\n    }\\r\\n\\r\\n    function getVersion() internal view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n            0x694AA1769357215DE4FAC081bf1f309aDC325306\\r\\n        );\\r\\n        return priceFeed.version();\\r\\n    }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xc1bd8a5b24d4d1a413f464e5690f4a9a30899a0e0a099bdefeadaf5434f6a6d9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f7d380380610f7d83398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610e18610165600039600081816102e1015261055f0152610e186000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b8063098de8201461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b6040516100af919061075c565b60405180910390f35b3480156100c457600080fd5b506100cd6102df565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107da565b61051f565b604051610103919061075c565b60405180910390f35b34801561011857600080fd5b50610121610537565b60405161012e9190610866565b60405180910390f35b34801561014357600080fd5b5061014c61055d565b6040516101599190610890565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108d7565b610581565b6040516101a09190610890565b60405180910390f35b6802b5e3af16b18800006101e8600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c090919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610961565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610364576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040f57600080828154811061038957610388610981565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610407906109df565b915050610367565b50600067ffffffffffffffff81111561042b5761042a610a28565b5b6040519080825280602002602001820160405280156104595781602001602082028036833780820191505090505b506000908051906020019061046f92919061069c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049690610a88565b60006040518083038185875af1925050503d80600081146104d3576040519150601f19603f3d011682016040523d82523d6000602084013e6104d8565b606091505b505090508061051c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051390610ae9565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cc836105fc565b90506000670de0b6b3a764000085836105e59190610b09565b6105ef9190610b92565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064557600080fd5b505afa158015610659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067d9190610c50565b5050509150506402540be400816106949190610ccb565b915050919050565b828054828255906000526020600020908101928215610715579160200282015b828111156107145782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bc565b5b5090506107229190610726565b5090565b5b8082111561073f576000816000905550600101610727565b5090565b6000819050919050565b61075681610743565b82525050565b6000602082019050610771600083018461074d565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107a78261077c565b9050919050565b6107b78161079c565b81146107c257600080fd5b50565b6000813590506107d4816107ae565b92915050565b6000602082840312156107f0576107ef610777565b5b60006107fe848285016107c5565b91505092915050565b6000819050919050565b600061082c6108276108228461077c565b610807565b61077c565b9050919050565b600061083e82610811565b9050919050565b600061085082610833565b9050919050565b61086081610845565b82525050565b600060208201905061087b6000830184610857565b92915050565b61088a8161079c565b82525050565b60006020820190506108a56000830184610881565b92915050565b6108b481610743565b81146108bf57600080fd5b50565b6000813590506108d1816108ab565b92915050565b6000602082840312156108ed576108ec610777565b5b60006108fb848285016108c2565b91505092915050565b600082825260208201905092915050565b7f6469646e742073656e6420656e6f756768000000000000000000000000000000600082015250565b600061094b601183610904565b915061095682610915565b602082019050919050565b6000602082019050818103600083015261097a8161093e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ea82610743565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1d57610a1c6109b0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a72600083610a57565b9150610a7d82610a62565b600082019050919050565b6000610a9382610a65565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ad3600b83610904565b9150610ade82610a9d565b602082019050919050565b60006020820190508181036000830152610b0281610ac6565b9050919050565b6000610b1482610743565b9150610b1f83610743565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5857610b576109b0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b9d82610743565b9150610ba883610743565b925082610bb857610bb7610b63565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610be281610bc3565b8114610bed57600080fd5b50565b600081519050610bff81610bd9565b92915050565b6000819050919050565b610c1881610c05565b8114610c2357600080fd5b50565b600081519050610c3581610c0f565b92915050565b600081519050610c4a816108ab565b92915050565b600080600080600060a08688031215610c6c57610c6b610777565b5b6000610c7a88828901610bf0565b9550506020610c8b88828901610c26565b9450506040610c9c88828901610c3b565b9350506060610cad88828901610c3b565b9250506080610cbe88828901610bf0565b9150509295509295909350565b6000610cd682610c05565b9150610ce183610c05565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d2057610d1f6109b0565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5d57610d5c6109b0565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9a57610d996109b0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dd757610dd66109b0565b5b82820290509291505056fea264697066735822122056a23d980386758bc195f676582c3033f07c78dd195d5be226a781a091c63dc964736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b8063098de8201461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b6040516100af919061075c565b60405180910390f35b3480156100c457600080fd5b506100cd6102df565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107da565b61051f565b604051610103919061075c565b60405180910390f35b34801561011857600080fd5b50610121610537565b60405161012e9190610866565b60405180910390f35b34801561014357600080fd5b5061014c61055d565b6040516101599190610890565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108d7565b610581565b6040516101a09190610890565b60405180910390f35b6802b5e3af16b18800006101e8600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c090919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610961565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610364576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040f57600080828154811061038957610388610981565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610407906109df565b915050610367565b50600067ffffffffffffffff81111561042b5761042a610a28565b5b6040519080825280602002602001820160405280156104595781602001602082028036833780820191505090505b506000908051906020019061046f92919061069c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049690610a88565b60006040518083038185875af1925050503d80600081146104d3576040519150601f19603f3d011682016040523d82523d6000602084013e6104d8565b606091505b505090508061051c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051390610ae9565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cc836105fc565b90506000670de0b6b3a764000085836105e59190610b09565b6105ef9190610b92565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064557600080fd5b505afa158015610659573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067d9190610c50565b5050509150506402540be400816106949190610ccb565b915050919050565b828054828255906000526020600020908101928215610715579160200282015b828111156107145782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bc565b5b5090506107229190610726565b5090565b5b8082111561073f576000816000905550600101610727565b5090565b6000819050919050565b61075681610743565b82525050565b6000602082019050610771600083018461074d565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107a78261077c565b9050919050565b6107b78161079c565b81146107c257600080fd5b50565b6000813590506107d4816107ae565b92915050565b6000602082840312156107f0576107ef610777565b5b60006107fe848285016107c5565b91505092915050565b6000819050919050565b600061082c6108276108228461077c565b610807565b61077c565b9050919050565b600061083e82610811565b9050919050565b600061085082610833565b9050919050565b61086081610845565b82525050565b600060208201905061087b6000830184610857565b92915050565b61088a8161079c565b82525050565b60006020820190506108a56000830184610881565b92915050565b6108b481610743565b81146108bf57600080fd5b50565b6000813590506108d1816108ab565b92915050565b6000602082840312156108ed576108ec610777565b5b60006108fb848285016108c2565b91505092915050565b600082825260208201905092915050565b7f6469646e742073656e6420656e6f756768000000000000000000000000000000600082015250565b600061094b601183610904565b915061095682610915565b602082019050919050565b6000602082019050818103600083015261097a8161093e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ea82610743565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1d57610a1c6109b0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a72600083610a57565b9150610a7d82610a62565b600082019050919050565b6000610a9382610a65565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ad3600b83610904565b9150610ade82610a9d565b602082019050919050565b60006020820190508181036000830152610b0281610ac6565b9050919050565b6000610b1482610743565b9150610b1f83610743565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5857610b576109b0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b9d82610743565b9150610ba883610743565b925082610bb857610bb7610b63565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610be281610bc3565b8114610bed57600080fd5b50565b600081519050610bff81610bd9565b92915050565b6000819050919050565b610c1881610c05565b8114610c2357600080fd5b50565b600081519050610c3581610c0f565b92915050565b600081519050610c4a816108ab565b92915050565b600080600080600060a08688031215610c6c57610c6b610777565b5b6000610c7a88828901610bf0565b9550506020610c8b88828901610c26565b9450506040610c9c88828901610c3b565b9350506060610cad88828901610c3b565b9250506080610cbe88828901610bf0565b9150509295509295909350565b6000610cd682610c05565b9150610ce183610c05565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d2057610d1f6109b0565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5d57610d5c6109b0565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9a57610d996109b0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dd757610dd66109b0565b5b82820290509291505056fea264697066735822122056a23d980386758bc195f676582c3033f07c78dd195d5be226a781a091c63dc964736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 87,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}